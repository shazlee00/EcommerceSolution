// <auto-generated />
using System;
using Ecommerce.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240618145803_addnavprop")]
    partial class addnavprop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Entities.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9364),
                            Description = "Electronic Items",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9422),
                            Description = "Food Items",
                            Name = "Food"
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9425),
                            Description = "Books and Magazines",
                            Name = "Books"
                        },
                        new
                        {
                            CategoryId = 4,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9427),
                            Description = "Apparel and Accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 5,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9428),
                            Description = "Toys and Games",
                            Name = "Toys"
                        },
                        new
                        {
                            CategoryId = 6,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9430),
                            Description = "Home and Office Furniture",
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = 7,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9432),
                            Description = "Tools and Hardware",
                            Name = "Tools"
                        },
                        new
                        {
                            CategoryId = 8,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9433),
                            Description = "Sporting Goods",
                            Name = "Sports"
                        },
                        new
                        {
                            CategoryId = 9,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9435),
                            Description = "Beauty and Personal Care",
                            Name = "Beauty"
                        },
                        new
                        {
                            CategoryId = 11,
                            CreatedTime = new DateTime(2024, 6, 18, 17, 58, 2, 738, DateTimeKind.Local).AddTicks(9436),
                            Description = "Automotive Parts and Accessories",
                            Name = "Automotive"
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.HasOne("Ecommerce.Entities.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Entities.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
